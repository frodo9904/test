name: CICD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
    paths-ignore:
    - '.github/workflows/**'
    - 'yaml/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3     
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV
        with:
          token: ${{ secrets.TOKEN }} 
          
      - name: install jdk
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'
      
      - name: chmod gradle
        run: chmod +x ./gradlew
        
      - name: build
        run: ./gradlew build --no-daemon
        
      - name: check build
        run: ls ./build/libs
        
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
          
      - name: docker build
        run: |
          mv ./build/libs/*.war ./Dockerfile
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/rapa-cicdlab:v${{ env.RELEASE_VERSION }} ./Dockerfile
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/rapa-cicdlab:latest ./Dockerfile

      - name: docker images check
        run: |
          docker images
          rm -f ./Dockerfile/*.war

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: docer push
        run: | 
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/rapa-cicdlab:v${{ env.RELEASE_VERSION }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/rapa-cicdlab:latest
                    
      - name: Get EKS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
          
      #- name: Update kube config
      #  run: aws eks update-kubeconfig --name frodo --region ap-northeast-2
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v1
    - name: Checkout kustomize repository
      uses: actions/checkout@v3
    - name: Update Kubernetes resources
      run: |
        cd yaml
        kustomize edit set image cicd-image=${{ secrets.DOCKERHUB_USERNAME }}/rapa-cicdlab:v${{ env.RELEASE_VERSION }}
    - name: Commit & Push Image 
      uses: actions-js/push@master
      with:
        message: '[DEPLOY] Update Image ${{ env.BACKEND_ECR_REPOSITORY }}:${{ env.TAG }}'
        branch: master
        github_token: ${{ secrets.TOKEN }}

        
      # - name: Commit changes
      #   uses: EndBug/add-and-commit@v9
      #   with:
      #     author_name: hifrodo9904
      #     author_email: hifrodo1@gmail.com
      #     message: 'update image ${{ secrets.DOCKERHUB_USERNAME }}/rapa-cicdlab:v${{ env.RELEASE_VERSION }}'
      #     add: '.'
      
      # - name: git push
      #   run: |
      #     cd ./yaml
      #     git add .
      #     git config --global user.email "hifrodo1@gmail.com"
      #     git config --global user.name "frodo5020"
      #     git commit -am "yml update"
      #     git push
         

      #- name: was-deploy restart
      #  run: kubectl set image deploy was was=${{ secrets.DOCKERHUB_USERNAME }}/rapa-cicdlab:v${{ env.RELEASE_VERSION }}
